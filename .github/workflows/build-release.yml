name: Build and Release

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '19.9.0'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 32
          script: |
            sdkmanager "build-tools;32.0.0"
            echo "Build Tools installed"
            export PATH=$PATH:$ANDROID_HOME/build-tools/32.0.0/

      - name: Add build-tools to PATH
        run: echo "$ANDROID_HOME/build-tools/32.0.0/" >> $GITHUB_PATH

      - name: Decode and set up Android Keystore
        run: echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > ${{ runner.temp }}/keystore.jks
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18.0.1'
          distribution: 'zulu'  # Azul Zulu distribution

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build Mobile App
        run: pnpm run build:mobile

      - name: Build Android App (AAB)
        run: pnpm run script:build-android
        env:
          ANDROID_KEYSTORE_PATH: ${{ runner.temp }}/keystore.jks
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEYSTORE_ALIAS: ${{ secrets.ANDROID_KEYSTORE_ALIAS }}
          ANDROID_RELEASE_TYPE: AAB

      - name: Build Android App (APK)
        run: pnpm run script:build-android
        env:
          ANDROID_KEYSTORE_PATH: ${{ runner.temp }}/keystore.jks
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEYSTORE_ALIAS: ${{ secrets.ANDROID_KEYSTORE_ALIAS }}
          ANDROID_RELEASE_TYPE: APK

      - name: Upload APK Release Asset
        id: upload-apk-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./android/app/build/outputs/apk/release/app-release-apksigner-signed.apk
          asset_name: app-release-apksigner-signed.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload AAB Release Asset
        id: upload-aab-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./android/app/build/outputs/bundle/release/app-release-signed.aab
          asset_name: app-release-signed.aab
          asset_content_type: application/vnd.android.package-archive
